{"version":3,"sources":["Header/Header.js","Results/Results.js","Form/Form.js","Footer/Footer.js","App/App.js","index.js"],"names":["Header","React","Component","Results","id","class","this","props","method","url","src","headers","name","result","Form","handleUrl","event","newUrl","target","value","setState","handleMethod","newMethod","handleRequestBody","newRequestBody","requestBody","prepResults","e","preventDefault","getResults","displayResults","useHistoryItem","historyList","state","requestHistory","requestOptions","getResultsFromHistory","a","responseHeaders","fetch","then","response","status","entries","pair","json","requestHeaders","historyItem","mode","body","push","console","log","for","type","placeholder","autoFocus","onBlur","length","onClick","onChange","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b002e66.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.scss';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n  render() {\n    return (\n      <fieldset id='restyResultsFields'>\n        <legend>Results:</legend>\n        <div id='apiResults'>\n          <span class='strong'>{this.props.method}</span>&nbsp;<span>{this.props.url}</span>\n          <ReactJson src={this.props.headers} name='Headers' />\n          <ReactJson src={this.props.result} name='Response' />\n        </div>\n      </fieldset>\n    )\n  }\n}\n\nexport default Results;","import { get } from 'http';\nimport React from 'react';\nimport Results from '../Results/Results';\n\nimport './Form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayResults: false,\n      url: ``,\n      method: ``,\n      result: {},\n      headers: {},\n      requestBody: {},\n      requestHistory: []\n    };\n  }\n\n  handleUrl = (event) => {\n    let newUrl = event.target.value;\n    this.setState({ url: newUrl });\n  }\n\n  handleMethod = (event) => {\n    let newMethod = event.target.value;\n    this.setState({ method: newMethod });\n  }\n\n  handleRequestBody = (event) => {\n    let newRequestBody = event.target.value;\n    this.setState({ requestBody: newRequestBody });\n  }\n\n  prepResults = e => {\n    e.preventDefault();\n    this.getResults();\n    this.setState({ displayResults: true })\n  }\n\n  useHistoryItem = e => {\n    e.preventDefault();\n    // TODO: Need to get the index from a link on the history list on the page.\n    //let historyItemIdx = event.target.value;\n\n    // But for now, I'll just hard code in the first one.\n    let historyItemIdx = 0;\n    // Just for a test\n    let historyList = this.state.requestHistory;\n    let url = historyList[historyItemIdx].url;\n    let requestOptions= historyList[historyItemIdx].requestOptions;\n    \n    this.setState({ url });\n    this.setState({ method: requestOptions.method })\n    this.setState({ displayResults: true })\n\n    this.getResultsFromHistory(e, url, requestOptions);\n  }\n\n  getResultsFromHistory = async (e, url, requestOptions) => {\n    let responseHeaders = {};\n\n    const result = await fetch(url, requestOptions)\n      .then(response => {\n        if (response.status === 200) {\n          // Get headers from the response\n          for (var pair of response.headers.entries()) {\n            responseHeaders[pair[0]] = pair[1];\n          }\n          return response.json();\n        } else {\n          return;\n        }\n      });\n    this.setState({ result: result });\n    this.setState({ headers: responseHeaders });\n  }\n\n  getResults = async (e) => {\n    const url = this.state.url;\n    const method = this.state.method;\n    let requestOptions;\n    let requestHeaders = { \"content-type\": \"application/json; charset=UTF-8\" }\n    let responseHeaders = {};\n    let historyItem = [];\n\n    let requestBody = this.state.requestBody;\n\n    switch (method) {\n      case 'GET':\n        requestOptions = { method: method, mode: 'cors' };\n\n        break;\n      case 'POST':\n        requestOptions = { method: method, headers: requestHeaders, body: requestBody, mode: 'cors' };\n        break;\n      case 'PUT':\n        requestOptions = { method: method, headers: requestHeaders, body: requestBody, mode: 'cors' };\n        break;\n      case 'DELETE':\n        requestOptions = { method: method, mode: 'cors' };\n        break;\n      default:\n        requestOptions = {};\n        break;\n    }\n\n    const result = await fetch(url, requestOptions)\n      .then(response => {\n        if (response.status === 200) {\n          // If the call was successful, add it to the history.\n          historyItem = {\n            url,\n            requestOptions\n          }\n          let historyList = this.state.requestHistory;\n          historyList.push(historyItem);\n          this.setState({ requestHistory: historyList });\n          // Get headers from the response\n          for (var pair of response.headers.entries()) {\n            responseHeaders[pair[0]] = pair[1];\n          }\n          return response.json();\n        } else {\n          return;\n        }\n      });\n    this.setState({ result: result });\n    this.setState({ headers: responseHeaders });\n\n  }\n\n  render() {\n    console.log(this.state.requestHistory);\n    return (\n      <div id='resty'>\n        <form id='restyForm'>\n          <fieldset id='restyUrlFields'>\n            <legend>URL:</legend>\n            <label for=\"restyUrl\">\n              <input type=\"text\" id=\"restyUrlInput\" name=\"restyUrl\"\n                placeholder=\"Enter a URL...\" autoFocus onBlur={this.handleUrl}></input>\n              {this.state.requestHistory.length ?\n                <button onClick={this.useHistoryItem} id='historyButton'>History</button>\n                : ''\n              }  \n\n              <button onClick={this.prepResults} id='submitButton'>Go!</button>\n            </label>\n            <div>\n              {/* TODO: Find a way to create the history list */}\n              {/* {\n              for (item in this.state.historyList) {\n                // append item to <li>{item.url}</li> that will link\n                // to onClick=\"{this.useHistoryItem}\"\n                // we will need value=\"i\"\n              }\n              } */}\n            </div>\n          </fieldset>\n          <fieldset id='restyMethodFields' onChange={this.handleMethod}>\n            <legend>Choose a method:</legend>\n            <label for=\"restyGet\">\n              <input type=\"radio\" id=\"restyGet\" name=\"restyMethod\" value=\"GET\"></input>\n              <span>GET</span>\n              {/* For a GET I don't think I need to do anything special. */}\n            </label>\n            <label for=\"restyPost\">\n              <input type=\"radio\" id=\"restyPost\" name=\"restyMethod\" value=\"POST\"></input>\n              <span>POST</span>\n              {/* For a POST I need to show an input box to add in some JSON to send with my request */}\n            </label>\n            <label for=\"restyPut\">\n              <input type=\"radio\" id=\"restyPut\" name=\"restyMethod\" value=\"PUT\"></input>\n              <span>PUT</span>\n              {/* For a PUT I need to show an input box to add in some JSON to send with my request */}\n            </label>\n            <label for=\"restyDelete\">\n              <input type=\"radio\" id=\"restyDelete\" name=\"restyMethod\" value=\"DELETE\"></input>\n              <span>DELETE</span>\n              {/* For a DELETE I don't think I need to do anything special. */}\n            </label>\n          </fieldset>\n          {(this.state.method === 'POST' || this.state.method === 'PUT') ?\n            <fieldset id='restyRequestBody'>\n              <legend>Request Body:</legend>\n              <textarea name='requestBody' onBlur={this.handleRequestBody}></textarea>\n            </fieldset>\n            : \"\"\n          }\n\n          {!this.state.displayResults ? '' :\n            <Results\n              url={this.state.url}\n              method={this.state.method}\n              result={this.state.result}\n              headers={this.state.headers}\n            />\n          }\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Form;","import React from 'react';\n\nimport './Footer.scss';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <p>&copy; 2021 - Jeremy Penning</p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from '../Header/Header';\nimport Form from '../Form/Form';\nimport Footer from '../Footer/Footer';\n\nimport './App.scss';\nimport './reset.scss';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Form />\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}