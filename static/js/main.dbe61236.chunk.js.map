{"version":3,"sources":["Header/Header.js","Results/Results.js","Form/Form.js","Footer/Footer.js","App/App.js","index.js"],"names":["Header","React","Component","Results","id","class","this","props","method","url","src","headers","name","result","Form","handleUrl","event","newUrl","target","value","setState","handleMethod","newMethod","prepResults","e","preventDefault","getResults","displayResults","a","state","fetch","mode","then","response","status","entries","pair","json","resultObj","count","Object","keys","length","for","type","placeholder","autoFocus","onBlur","onClick","onChange","Footer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dbe61236.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Header.scss';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header>\n        <h1>RESTy</h1>\n      </header>\n    )\n  }\n}\n\nexport default Header;","import React from 'react';\nimport ReactJson from 'react-json-view';\n\nclass Results extends React.Component {\n  render() {\n    return (\n      <fieldset id='restyResultsFields'>\n        <legend>Results:</legend>\n        <div id='apiResults'>\n          <span class='strong'>{this.props.method}</span>&nbsp;<span>{this.props.url}</span>\n          <ReactJson src={this.props.headers} name='Headers' />\n          <ReactJson src={this.props.result} name='Response' />\n        </div>\n      </fieldset>\n    )\n  }\n}\n\nexport default Results;","import React from 'react';\nimport Results from '../Results/Results';\n\nimport './Form.scss';\n\nclass Form extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayResults: false,\n      url: ``,\n      method: ``,\n      result: {},\n      headers: {}\n    };\n  }\n\n  handleUrl = (event) => {\n    let newUrl = event.target.value;\n    this.setState({ url: newUrl });\n  }\n\n  handleMethod = (event) => {\n    let newMethod = event.target.value;\n    this.setState({ method: newMethod });\n  }\n\n  prepResults = e => {\n      e.preventDefault();\n      this.getResults();\n      this.setState({ displayResults: true })\n  }\n\n  getResults = async (e) => {\n    const url = this.state.url;\n    const method = this.state.method;\n\n    let headers = {};\n\n    const result = await fetch(url, { method: method, mode: 'cors' })\n      .then(response => {\n        if (response.status === 200) {\n          for (var pair of response.headers.entries()) {\n            headers[pair[0]] = pair[1];\n          }\n          return response.json();\n        } else {\n          return;\n        }\n      });\n    let resultObj = {};\n    resultObj.count = Object.keys(result).length;\n    resultObj.result = result;\n\n    this.setState({ result: resultObj });\n    this.setState({ headers: headers });\n  }\n\n  render() {\n    return (\n      <div id='resty'>\n        <form id='restyForm'>\n          <fieldset id='restyUrlFields'>\n            <legend>URL:</legend>\n            <label for=\"restyUrl\">\n              <input type=\"text\" id=\"restyUrlInput\" name=\"restyUrl\"\n              placeholder=\"Enter a URL...\" autoFocus onBlur={ this.handleUrl }></input>\n              <button onClick={ this.prepResults } id='submitButton'>Go!</button>\n            </label>\n          </fieldset>\n          <fieldset id='restyMethodFields' onChange={ this.handleMethod }>\n            <legend>Choose a method:</legend>\n              <label for=\"restyGet\">\n                <input type=\"radio\" id=\"restyGet\" name=\"restyMethod\" value=\"GET\"></input>\n                <span>GET</span>\n                {/* For a GET I don't think I need to do anything special. */}\n              </label>\n              <label for=\"restyPost\">\n                <input type=\"radio\" id=\"restyPost\" name=\"restyMethod\" value=\"POST\"></input>\n                <span>POST</span>\n                {/* For a POST I need to show an input box to add in some JSON to send with my request */}\n              </label>\n              <label for=\"restyPut\">\n                <input type=\"radio\" id=\"restyPut\" name=\"restyMethod\" value=\"PUT\"></input>\n                <span>PUT</span>\n                {/* For a PUT I need to show an input box to add in some JSON to send with my request */}\n              </label>\n              <label for=\"restyDelete\">\n                <input type=\"radio\" id=\"restyDelete\" name=\"restyMethod\" value=\"DELETE\"></input>\n                <span>DELETE</span>\n                {/* For a DELETE I don't think I need to do anything special. */}\n              </label>\n          </fieldset>\n          {!this.state.displayResults ? '' :\n            <Results\n              url={this.state.url}\n              method={this.state.method}\n              result={this.state.result}\n              headers={this.state.headers}\n            />\n          }\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Form;","import React from 'react';\n\nimport './Footer.scss';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <footer>\n        <p>&copy; 2021 - Jeremy Penning</p>\n      </footer>\n    )\n  }\n}\n\nexport default Footer;","import React from 'react';\nimport Header from '../Header/Header';\nimport Form from '../Form/Form';\nimport Footer from '../Footer/Footer';\n\nimport './App.scss';\nimport './reset.scss';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <>\n        <Header />\n        <Form />\n        <Footer />\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}